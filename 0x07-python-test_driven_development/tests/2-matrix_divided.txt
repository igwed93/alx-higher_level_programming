# run test with ``python3 -m doctest -v ./tests/2-matrix_divided.txt``

===========================
HOW TO USE 2-matrix_divided.py
===========================

This module defines an matrix division function ``matrix_divided(matrix, div)``


First import method to test
===========================
>>> matrix_divided= __import__('2-matrix_divided').matrix_divided


Usage:
======
```matrix_divided(matrix, div)``` returns a new matrix which is the result of
the division of every element of matrix by div.


SUCCESS CASES:
==============

Test matrix containing integers only
::
	>>> m = [[4, 5, 6], [1, 2, 3]]
	>>> print(matrix_divided(m, 2))
	[[2.0, 2.5, 3.0], [0.5, 1.0, 1.5]]
	>>> m = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(m, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix = [[1, 2, 3], [4, 5, 6.7]]
	>>> print(matrix_divided(matrix, float("inf")))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test matrix containing floating point values
::
	>>> m = [[6.5, 9.0, 9.9], [4.3, 3.2, 7.4]]
	>>> print(matrix_divided(m, 5))
	[[1.3, 1.8, 1.98], [0.86, 0.64, 1.48]]

Test div with an unsigned int
::
	>>> m = [[6.5, 9.0, 9.9], [4.3, 3.2, 7.4]]
	>>> print(matrix_divided(m, -5))
	[[-1.3, -1.8, -1.98], [-0.86, -0.64, -1.48]]

FAIL CASES:
===========

Test matrix containing non-int or non-float values
::
	>>> m = [['a', 6, "me"], [14, 18, "one"]]
	>>> print(matrix_divided(m, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix containing row of variable sizes
::
	>>> m = [[1, 2, 3], [3, 9, 7, 6], [2, 3]]
	>>> print(matrix_divided(m, 5))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Test div of a non-int or non-float type
::
	>>> m = [[1, 2, 5], [2, 4, 5]]
	>>> print(matrix_divided(m, "two"))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Test div of a zero value
::
	>>> m = [[1, 2, 5], [2, 4, 5]]
	>>> print(matrix_divided(m, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Test matrix with boolean lists
::
	>>> matrix = [[True], [False]]
	>>> print(matrix_divided(matrix, [True]))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Test empty matrix
::
	>>> print(matrix_divided(None, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> m = [[]]
	>>> print(matrix_divided(m, 4))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with other data types
::
	>>> matrix = [["hey"], ["you"]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2, 3], {"key" : 4}]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2], 3, {4, 5}]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = {1, 2, 3, 4}
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = ([1, 2], [3, 4])
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2], [3, (4, 5)]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test extra args
::
	>>> matrix = [[1, 2, 3], [4, 5, 6.7]]
	>>> print(matrix_divided(matrix, 2, 100))
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Test too few args
::
	>>> matrix = [[1, 2], [3, 4]]
	>>> print(matrix_divided(matrix))
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

